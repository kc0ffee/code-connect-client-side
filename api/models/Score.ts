/* tslint:disable */
/* eslint-disable */
/**
 * Code Connect API
 * Code Connectで利用するAPIの定義 # Feature - theme   - テーマをサーバーから取得するAPI - code   - ユーザーが作成したコードをサーバーに送信する機能  More Info =>  Notion 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Score
 */
export interface Score {
    /**
     * 
     * @type {string}
     * @memberof Score
     */
    yourType?: string;
    /**
     * 
     * @type {string}
     * @memberof Score
     */
    typeDescription?: string;
    /**
     * 
     * @type {number}
     * @memberof Score
     */
    codeLine?: number;
    /**
     * 
     * @type {number}
     * @memberof Score
     */
    tokenLen?: number;
    /**
     * 
     * @type {number}
     * @memberof Score
     */
    tokenCount?: number;
    /**
     * 
     * @type {number}
     * @memberof Score
     */
    functionLen?: number;
}

/**
 * Check if a given object implements the Score interface.
 */
export function instanceOfScore(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScoreFromJSON(json: any): Score {
    return ScoreFromJSONTyped(json, false);
}

export function ScoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): Score {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'yourType': !exists(json, 'your_type') ? undefined : json['your_type'],
        'typeDescription': !exists(json, 'type_description') ? undefined : json['type_description'],
        'codeLine': !exists(json, 'code_line') ? undefined : json['code_line'],
        'tokenLen': !exists(json, 'token_len') ? undefined : json['token_len'],
        'tokenCount': !exists(json, 'token_count') ? undefined : json['token_count'],
        'functionLen': !exists(json, 'function_len') ? undefined : json['function_len'],
    };
}

export function ScoreToJSON(value?: Score | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'your_type': value.yourType,
        'type_description': value.typeDescription,
        'code_line': value.codeLine,
        'token_len': value.tokenLen,
        'token_count': value.tokenCount,
        'function_len': value.functionLen,
    };
}

