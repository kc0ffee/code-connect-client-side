/* tslint:disable */
/* eslint-disable */
/**
 * Code Connect API
 * Code Connectで利用するAPIの定義 # Feature - theme   - テーマをサーバーから取得するAPI - code   - ユーザーが作成したコードをサーバーに送信する機能  More Info =>  Notion 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CodeResponse
 */
export interface CodeResponse {
    /**
     * 
     * @type {number}
     * @memberof CodeResponse
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof CodeResponse
     */
    themeId?: number;
    /**
     * 
     * @type {string}
     * @memberof CodeResponse
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof CodeResponse
     */
    timeStamp?: string;
}

/**
 * Check if a given object implements the CodeResponse interface.
 */
export function instanceOfCodeResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CodeResponseFromJSON(json: any): CodeResponse {
    return CodeResponseFromJSONTyped(json, false);
}

export function CodeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CodeResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'themeId': !exists(json, 'themeId') ? undefined : json['themeId'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'timeStamp': !exists(json, 'timeStamp') ? undefined : json['timeStamp'],
    };
}

export function CodeResponseToJSON(value?: CodeResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'themeId': value.themeId,
        'code': value.code,
        'timeStamp': value.timeStamp,
    };
}

